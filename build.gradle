import org.apache.tools.ant.taskdefs.condition.Os

def checkWin() {
    return Os.isFamily(Os.FAMILY_WINDOWS)
}

def getMvn() {
    def ending = ""
    if (checkWin()) {
        ending = ".cmd"
    }
    return "mvn${ending}"
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.6'
}

task installReflectionCommon(type: Exec) {
    def mavenExecutable = getMvn()
    workingDir "kotlin2js-reflection-core"
    executable mavenExecutable
    args "install"
}

task cleanReflectionCommon(type: Exec) {
    def mavenExecutable = getMvn()
    workingDir "kotlin2js-reflection-core"
    executable mavenExecutable
    args "clean"
}

task testReflectionCommon(type: Exec) {
    def mavenExecutable = getMvn()
    workingDir "kotlin2js-reflection-core-test"
    executable mavenExecutable
    args "test"
}

task cleanReflectionCommonTest(type: Exec) {
    def mavenExecutable = getMvn()
    workingDir "kotlin2js-reflection-core-test"
    executable mavenExecutable
    args "clean"
}

task installReflectionMavenPlugin(type: Exec) {
    def mavenExecutable = getMvn()
    workingDir "kotlin2js-reflection-mplugin"
    executable mavenExecutable
    args "install"
}

task cleanReflectionMavenPlugin(type: Exec) {
    def mavenExecutable = getMvn()
    workingDir "kotlin2js-reflection-mplugin"
    executable mavenExecutable
    args "clean"
}

task installReflectionApi(type: Exec) {
    def mavenExecutable = getMvn()
    workingDir "kotlin2js-reflection-api"
    executable mavenExecutable
    args "install"
}

task cleanReflectionApi(type: Exec) {
    def mavenExecutable = getMvn()
    workingDir "kotlin2js-reflection-api"
    executable mavenExecutable
    args "clean"
}

task installReflectionPluginApiTest(type: Exec) {
    def mavenExecutable = getMvn()
    workingDir "kotlin2js-reflection-plugin-test"
    executable mavenExecutable
    args "test"
}

task cleanReflectionPluginApiTest(type: Exec) {
    def mavenExecutable = getMvn()
    workingDir "kotlin2js-reflection-plugin-test"
    executable mavenExecutable
    args "clean"
}

task runAllTest {}

project(':kotlin2js-reflection-gplugin').afterEvaluate {
    project(':kotlin2js-reflection-gplugin').tasks.getByName('assemble').dependsOn(installReflectionCommon)
}

def cleanTask = getTasksByName("clean", true)[0]
cleanTask.dependsOn(cleanReflectionCommon)
cleanTask.dependsOn(cleanReflectionCommonTest)
cleanTask.dependsOn(cleanReflectionMavenPlugin)
cleanTask.dependsOn(cleanReflectionApi)
cleanTask.dependsOn(cleanReflectionPluginApiTest)

runAllTest.finalizedBy(installReflectionMavenPlugin)
runAllTest.dependsOn ':kotlin2js-reflection-gplugin:build'
runAllTest.dependsOn ':kotlin2js-reflection-gplugin:publishToMavenLocal'
runAllTest.finalizedBy(installReflectionApi)
runAllTest.finalizedBy(installReflectionPluginApiTest)